/**
 * Easy to use jQuery offcanvas plugin
 * https://github.com/lgraubner/offcanvas
 *
 * @author Lars Graubner <mail@larsgraubner.de>
 * @version 0.3.3
 * @license MIT
 */
!function(n){"use strict";var o,a,s,e,t,i,r,f,c,l=n("head"),d=function(n){var o,a=document.createElement("div");for(o in n)if(void 0!==a.style[o])return n[o];return!1},v=function(n,a){var s=d({transform:"transform",WebkitTransform:"-webkit-transform",MozTransform:"-moz-transform",OTransform:"-o-transform",msTransform:"-ms-transform"}),e=d({transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"});s&&e?(t.one(e,a),t.css({transition:s+" "+o.duration+"ms ease",transform:"translateX("+n+")"})):t.animate({left:n},o.duration,"swing",a)},u=function(){if(c.initialized){var o=n(document).height();a.css("height",o)}},g=function(){a.css("height","")},p={init:function(d){if(c=a.data(),!c.initialized){void 0,a=n(this),r=n(window),f=!1,o=n.extend(n.fn.offcanvas.defaults,c,d),a.data("offcanvas",o),s=n(o.container),s.children(":not(script)").wrapAll('<div class="'+o.classes.outer+'"/>'),e=n("."+o.classes.outer),e.wrapInner('<div class="'+o.classes.inner+'"/>'),t=n("."+o.classes.inner),s.addClass(o.classes.container);var v=a.prop("id")?"#"+a.prop("id"):"."+a.prop("className").replace(/\s/g,"."),u='<style id="offcanvas-style">'+o.container+" ."+o.classes.outer+" { left: 0; overflow-x: hidden; position: absolute; top: 0; width: 100%; } "+o.container+" ."+o.classes.inner+" { position: relative; } "+o.container+" "+v+" { display: block; height: 300px; "+o.direction+": -"+o.coverage+"; margin: 0; overflow: hidden; position: absolute; top: 0; width: "+o.coverage+" } </style>";l.append(u),a.show().on("click.offvanvas touchstart.offcanvas",function(n){n.stopPropagation()}),i=n(o.trigger),i.on("click.offcanvas",p.toggle),a.data("initialized",!0),a.trigger("init.offcanvas")}},show:function(){void 0,a.trigger("show.offcanvas"),u(),r.on("resize.offcanvas",u),s.addClass(o.classes.open),f=!0;var n="left"==o.direction?o.coverage:"-"+o.coverage;v(n,function(){s.one("click.offcanvas touchstart.offcanvas",function(n){n.stopPropagation(),n.preventDefault(),p.hide()}),a.trigger("shown.offcanvas")})},hide:function(){void 0,a.trigger("hide.offcanvas"),s.removeClass(o.classes.open),f=!1,v(0,function(){g(),r.off("resize.oncanvas",u),a.trigger("hidden.offcanvas")})},toggle:function(n){n.stopPropagation(),f?p.hide():p.show()},destroy:function(){c.initialized&&(void 0,t.unwrap(),t.children().unwrap(),s.off("click.offcanvas touchstart.offcanvas").removeClass(o.classes.container).removeClass(o.classes.open),i.off("click.offcanvas"),l.find("#offcanvas-style").remove(),a.off("click.offcanvas touchstart.offcanvas").removeData("offcanvas").removeAttr("style"),a.data("initialized",!1),g())}};n.fn.offcanvas=function(o){return p[o]?p[o].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof o&&o?void n.error("Method "+o+" does not exist on jquery.offcanvas"):p.init.apply(this,arguments)},n.fn.offcanvas.defaults={coverage:"200px",direction:"left",trigger:"#nav-trigger",container:"body",duration:200,classes:{inner:"offcanvas-inner",outer:"offcanvas-outer",container:"offcanvas",open:"offcanvas-open"}}}(jQuery);